import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useState } from "react";
import { MdLibraryAdd } from "react-icons/md";
import { trpc } from "../lib/trpc";
import { BsHeartFill } from "react-icons/bs";

const Home: NextPage = () => {
  const [opinion1, setOpinion1] = useState("");
  const [opinion2, setOpinion2] = useState("");
  const [pollDescription, setPollDescription] = useState("");
  const pollMutation = trpc.useMutation(["add-poll"]);
  const router = useRouter();
  const handleSubmit = async (e: any) => {
    e.preventDefault();

    pollMutation.mutateAsync({
      opinion1: opinion1,
      opinion2: opinion2,
      pollDescription: pollDescription,
    }).then(poll=>{
      if(poll.id){

           router.push(`http://localhost:3000/vote/${poll.id}`)};
      }
      )
   
  };


  return (
    <div className="">
      <Head>
        <title>Pollage</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="grid h-screen place-items-center">
        <p className="text-2xl font-nuto font-bold">Pollage</p>
        <label
          htmlFor="my-modal-3"
          className="flex border-4 border-[#808080] max-w-sm h-2/4 place-items-center btn modal-button	"
        >
          <MdLibraryAdd className="m-1 w-24 h-24" />
          <p className="m-4 text-xl font-extrabold font-jetbrains">
            Create poll
          </p>
        </label>

        <input type="checkbox" id="my-modal-3" className="modal-toggle" />
        <div className="modal">
          <div className="modal-box relative">
            <label
              htmlFor="my-modal-3"
              className="btn btn-sm btn-circle absolute right-2 top-2"
            >
              âœ•
            </label>
            <h3>Poll information</h3>
            <input
              type="text"
              placeholder="Poll descrpition"
              className="m-3 input input-bordered w-full max-w-xs"
              onChange={(e) => {
                setPollDescription(e.target.value);
              }}
            />
            <input
              type="text"
              placeholder="option 1"
              className="m-3 input input-bordered w-full max-w-xs"
              onChange={(e) => {
                setOpinion1(e.target.value);
              }}
            />
            <input
              type="text"
              placeholder="option 2"
              className="m-3 input input-bordered w-full max-w-xs"
              onChange={(e) => {
                setOpinion2(e.target.value);
              }}
            />
            <div className="btn">
              <button disabled={pollMutation.isLoading } onClick={(e) => handleSubmit(e)} className="btn">
                Submit poll
              </button>
            </div>
          </div>
        </div>
      </div>
      <footer className="footer footer-center p-4 bg-base-300 text-base-content">
        <div className="flex flex-row">
          <h3>From Github with</h3> <BsHeartFill className="bg-red m-1"/>
        </div>
      </footer>
    </div>
  );
};

export default Home;
